# If you intended to deploy Kubernetes in an air-gapped environment,
# please consult the documentation on how to configure custom RKE images.
nodes:
- address: aos4
  port: "22"
  internal_address: aos4
  role:
  - controlplane
  - worker
  - etcd
  hostname_override: aos4
  user: root
  docker_socket: /var/run/docker.sock
  ssh_key: ""
  ssh_key_path: ~/.ssh/id_rsa
  ssh_cert: ""
  ssh_cert_path: ""
  labels: {}
  taints: []
- address: aos6
  port: "22"
  internal_address: aos6
  role:
  - controlplane
  - worker
  - etcd
  hostname_override: aos6
  user: root
  docker_socket: /var/run/docker.sock
  ssh_key: ""
  ssh_key_path: ~/.ssh/id_rsa
  ssh_cert: ""
  ssh_cert_path: ""
  labels: {}
  taints: []
services:
  etcd:
    image: ""
    extra_args: {}
    extra_args_array: {}
    extra_binds: []
    extra_env: []
    win_extra_args: {}
    win_extra_args_array: {}
    win_extra_binds: []
    win_extra_env: []
    external_urls: []
    ca_cert: ""
    cert: ""
    key: ""
    path: ""
    uid: 0
    gid: 0
    snapshot: null
    retention: ""
    creation: ""
    backup_config: null
  kube-api:
    image: ""
    extra_args: {}
    extra_args_array: {}
    extra_binds: []
    extra_env: []
    win_extra_args: {}
    win_extra_args_array: {}
    win_extra_binds: []
    win_extra_env: []
    service_cluster_ip_range: 10.43.0.0/16
    service_node_port_range: ""
    pod_security_policy: false
    always_pull_images: false
    secrets_encryption_config: null
    audit_log: null
    admission_configuration: null
    event_rate_limit: null
  kube-controller:
    image: ""
    extra_args: {}
    extra_args_array: {}
    extra_binds: []
    extra_env: []
    win_extra_args: {}
    win_extra_args_array: {}
    win_extra_binds: []
    win_extra_env: []
    cluster_cidr: 10.42.0.0/16
    service_cluster_ip_range: 10.43.0.0/16
  scheduler:
    image: ""
    extra_args: {}
    extra_args_array: {}
    extra_binds: []
    extra_env: []
    win_extra_args: {}
    win_extra_args_array: {}
    win_extra_binds: []
    win_extra_env: []
  kubelet:
    image: ""
    extra_args: {}
    extra_args_array: {}
    extra_binds: []
    extra_env: []
    win_extra_args: {}
    win_extra_args_array: {}
    win_extra_binds: []
    win_extra_env: []
    cluster_domain: cluster.local
    infra_container_image: ""
    cluster_dns_server: 10.43.0.10
    fail_swap_on: false
    generate_serving_certificate: false
  kubeproxy:
    image: ""
    extra_args: {}
    extra_args_array: {}
    extra_binds: []
    extra_env: []
    win_extra_args: {}
    win_extra_args_array: {}
    win_extra_binds: []
    win_extra_env: []
network:
  plugin: flannel
  options:
    flannel_iface: "eth0"
  mtu: 0
  node_selector: {}
  update_strategy: null
  tolerations: []
authentication:
  strategy: x509
  sans: []
  webhook: null
addons: |-
  ---
  apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZPakNDQkNLZ0F3SUJBZ0lTQTZkUVRNVDRObkVRT0x1TWRCSE5QMmYzTUEwR0NTcUdTSWIzRFFFQkN3VUEKTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRApFd0pTTXpBZUZ3MHlNakV3TXpFd056UTFNVFphRncweU16QXhNamt3TnpRMU1UVmFNQnN4R1RBWEJnTlZCQU1UCkVHSmxjbXhwYm1SbGRtOXdjeTVqYjIwd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFDM3dIek91c01WemNsMm9sdnFYMURQa2wzUVF6R3RpK0w3aFRTSmJUV0pObUxUR0FVTjhtMG8rdDB0YUhBdApCMWJFOEVIcGh6YnV6SVVLVGtGYlVlaXpzaENRVURLVEErclJHNE9GR0xBRlVJTFFMSGZtUmdFclN5KzhnWXF1CkhOakVpMVJkTW53Y0JmYTFaRlY2ck83b2ZjYnQ2NFBJc3BYYU5FVktnN3k2M0kyUjVPZmIzT3psaThseE95dm0KcW9VS3FjYU02UnRVY2xOZFM0OFBzTzltNkpDaFBCa1NvcFZrNUh5cUtxTEtyUHJlcnpVeVQyYklBNXFoWDh4awora3JnN0ZDQVNub0tOWUYvTWFwcWFhK3RjQkxsZk0vOW9OaTdWTlJKZTUrYlBZbm9QL3dZeVZWc05CdVB5UXdECmtHNGU3cG55d3VyZHZDSG5pMjJuVEc0cEFnTUJBQUdqZ2dKZk1JSUNXekFPQmdOVkhROEJBZjhFQkFNQ0JhQXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRApWUjBPQkJZRUZBamFLZUpQNmZqQXNyS280SzR3aTlwUWZjbUtNQjhHQTFVZEl3UVlNQmFBRkJRdXN4ZTNXRmJMCnJsQUpRT1lmcjUyTEZNTEdNRlVHQ0NzR0FRVUZCd0VCQkVrd1J6QWhCZ2dyQmdFRkJRY3dBWVlWYUhSMGNEb3YKTDNJekxtOHViR1Z1WTNJdWIzSm5NQ0lHQ0NzR0FRVUZCekFDaGhab2RIUndPaTh2Y2pNdWFTNXNaVzVqY2k1dgpjbWN2TUM4R0ExVWRFUVFvTUNhQ0Vpb3VZbVZ5YkdsdVpHVjJiM0J6TG1OdmJZSVFZbVZ5YkdsdVpHVjJiM0J6CkxtTnZiVEJNQmdOVkhTQUVSVEJETUFnR0JtZUJEQUVDQVRBM0Jnc3JCZ0VFQVlMZkV3RUJBVEFvTUNZR0NDc0cKQVFVRkJ3SUJGaHBvZEhSd09pOHZZM0J6TG14bGRITmxibU55ZVhCMExtOXlaekNDQVFRR0Npc0dBUVFCMW5rQwpCQUlFZ2ZVRWdmSUE4QUIyQUxjKyt5VGZuRTI2ZGZJNXhicFk5R3hkL0VMUGVwODF4SjRkQ1lFbDdiU1pBQUFCCmhDMDNaMHdBQUFRREFFY3dSUUlnRVR3T1F3L1U5Ty9EekorN0pST3BFb2RMOXpTZ3VZcitRMWtvcGpUM243TUMKSVFDS2x4WHFQY0J2TXFqU1dVVTZwdklSWnorZlJHMHcycmlmQkpoc1p0aVNOZ0IyQUhveWpGVFl0eTIySU9vNAo0RkllNllRV2NESVRoVTA3MGl2Qk9sZWpVdXRTQUFBQmhDMDNaM2tBQUFRREFFY3dSUUlnTWtwLzJacjQvQTMrCklXVHVJUW1ueS93alNVMnNYM3JLOXFkeWFXRERwTDhDSVFELzREOUJTSW1wcUY2K0h6TWhOcTFLNDdDcCtBakQKUWovS0NsQmgwNVhlOHpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWpsb2tqMWJNZXNMbXB4MFRjWlFadldueApnSkdoM3I5NHZ0L25GdGM2MTU1eUplclJ6eEdPUnlSemNvQURUaUZibU1HSjN6WnZOcy9TazVPOHQrRmlsWmhBCjZIM2NUWmNSUWNsYkpkdFgrblhjUW5Vd3hFUklnank1Qk5RTkYwb0xDc3JBWDZqRG1hbDIzMWY4RXl5Z1hXYWEKL0dEamlJOTJ6MjY3dHhVWkVKL05PL21qV0U5bFFBOHVXSkxRRi9LM2ZOdzFaaDU4azVacHpOeTNDQUpyQlFkagpoR2FOaHgrcDFPRmROWGQ1UEwvTysxazJDSXBqNG8vU0YvM2dDUGRVTkhwK0Nlc1Vlb1Q5MnBUVm1GZjQralE0CjF6Zm9aY2Nsa05WYkZUdzRjakRHSFMyNHBDVC9yMlpoTFM3SFlDMEZReVB6Z1krWkozTWQwK3d5ejExZUJBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRkZqQ0NBdjZnQXdJQkFnSVJBSkVyQ0VyUERCaW5VL2JXTGlXblgxb3dEUVlKS29aSWh2Y05BUUVMQlFBdwpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoCmNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3SGhjTk1qQXdPVEEwTURBd01EQXcKV2hjTk1qVXdPVEUxTVRZd01EQXdXakF5TVFzd0NRWURWUVFHRXdKVlV6RVdNQlFHQTFVRUNoTU5UR1YwSjNNZwpSVzVqY25sd2RERUxNQWtHQTFVRUF4TUNVak13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM3QWhVb3pQYWdsTk1QRXV5TlZaTEQrSUx4bWFaNlFvaW5YU2FxdFN1NXhVeXhyNDVyK1hYSW85Y1AKUjVRVVZUVlhqSjZvb2prWjlZSThRcWxPYnZVN3d5N2JqY0N3WFBOWk9PZnR6Mm53V2dzYnZzQ1VKQ1dIK2pkeApzeFBuSEt6aG0rL2I1RHRGVWtXV3FjRlR6alRJVXU2MXJ1MlAzbUJ3NHFWVXE3WnREcGVsUURScks5TzhadXRtCk5IejZhNHVQVnltWitEQVhYYnB5Yi91QnhhM1NobGc5RjhmbkNidnhLL2VHM01IYWNWM1VSdVBNclNYQmlMeGcKWjNWbXMvRVk5NkpjNWxQL09vaTJSNlgvRXhqcW1BbDNQNTFUK2M4QjVmV21jQmNVcjJPay81bXprNTNjVTZjRwova2lGSGFGcHJpVjF1eFBNVWdQMTdWR2hpOXNWQWdNQkFBR2pnZ0VJTUlJQkJEQU9CZ05WSFE4QkFmOEVCQU1DCkFZWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUJJR0ExVWRFd0VCL3dRSU1BWUIKQWY4Q0FRQXdIUVlEVlIwT0JCWUVGQlF1c3hlM1dGYkxybEFKUU9ZZnI1MkxGTUxHTUI4R0ExVWRJd1FZTUJhQQpGSG0wV2VaN3R1WGtBWE9BQ0lqSUdsajI2WnR1TURJR0NDc0dBUVVGQndFQkJDWXdKREFpQmdnckJnRUZCUWN3CkFvWVdhSFIwY0RvdkwzZ3hMbWt1YkdWdVkzSXViM0puTHpBbkJnTlZIUjhFSURBZU1CeWdHcUFZaGhab2RIUncKT2k4dmVERXVZeTVzWlc1amNpNXZjbWN2TUNJR0ExVWRJQVFiTUJrd0NBWUdaNEVNQVFJQk1BMEdDeXNHQVFRQgpndDhUQVFFQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ0Z5azVIUHFQM2hVU0Z2TlZuZUxLWVk2MTFUUjZXClBUTmxjbFF0Z2FEcXcrMzRJTDlmekxkd0FMZHVPL1plbE43a0lKK203NHV5QStlaXRSWThrYzYwN1RrQzUzd2wKaWtmbVpXNC9SdlRaOE02VUsrNVV6aEs4akNkTHVNR1lMNkt2elhHUlNnaTN5TGdqZXdRdENQa0lWejZEMlFRegpDa2NoZUFtQ0o4TXF5SnU1emx6eVpNakF2bm5BVDQ1dFJBeGVrcnN1OTRzUTRlZ2RSQ25iV1NEdFk3a2grQkltCmxKTlhvQjFsQk1FS0lxNFFEVU9Yb1JnZmZ1RGdoamUxV3JHOU1MK0hiaXNxL3lGT0d3WEQ5UmlYOEY2c3c2VzQKYXZBdXZEc3p1ZTVMM3N6ODVLK0VDNFkvd0ZWRE52Wm80VFlYYW82WjBmK2xRS2MwdDhEUVl6azFPWFZ1OHJwMgp5Sk1DNmFsTGJCZk9EQUxadllIN243ZG8xQVpsczRJOWQxUDRqbmtEclFveEIzVXFROWhWbDNMRUtRNzN4RjFPCnlLNUdoRERYOG9WZkdLRjV1K2RlY0lzSDRZYVR3N21QM0dGeEpTcXYzKzBsVUZKb2k1TGM1ZGExNDlwOTBJZHMKaENFeHJvTDErN21yeUlrWFBlRk01VGdPOXIwcnZaYUJGT3ZWMnowZ3AzNVowK0w0V1BsYnVFak4vbHhQRmluKwpIbFVqcjhnUnNJM3FmSk9RRnkvOXJLSUpSMFkvOE9td3QvOG9UV2d5MW1kZUhtbWprN2oxbllzdkM5SlNRNlp2Ck1sZGxUVEtCM3poVGhWMStYV1lwNnJqZDVKVzF6YlZXRWtMTnhFN0dKVGhFVUczc3pnQlZHUDdwU1dUVVRzcVgKbkxSYndIT29xN2hId2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRllEQ0NCRWlnQXdJQkFnSVFRQUYzSVRmVTZVSzQ3bmFxUEdRS3R6QU5CZ2txaGtpRzl3MEJBUXNGQURBLwpNU1F3SWdZRFZRUUtFeHRFYVdkcGRHRnNJRk5wWjI1aGRIVnlaU0JVY25WemRDQkRieTR4RnpBVkJnTlZCQU1UCkRrUlRWQ0JTYjI5MElFTkJJRmd6TUI0WERUSXhNREV5TURFNU1UUXdNMW9YRFRJME1Ea3pNREU0TVRRd00xb3cKVHpFTE1Ba0dBMVVFQmhNQ1ZWTXhLVEFuQmdOVkJBb1RJRWx1ZEdWeWJtVjBJRk5sWTNWeWFYUjVJRkpsYzJWaApjbU5vSUVkeWIzVndNUlV3RXdZRFZRUURFd3hKVTFKSElGSnZiM1FnV0RFd2dnSWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElDRHdBd2dnSUtBb0lDQVFDdDZDUno5QlEzODV1ZUsxY29ISWUrM0xmZk9KQ01ianptVjZCNDkzWEMKb3Y3MWFtNzJBRThvMjk1b2hteEVrN2F4WS8wVUVtdS9IOUxxTVpzaGZ0RXpQTHBJOWQxNTM3TzQveEx4SVpwTAp3WXFHY1dsS1ptWnNqMzQ4Y0wrdEtTSUc4K1RBNW9DdTRrdVB0NWwrbEFPZjAwZVhmSmxJSTFQb09LNVBDbStECkx0RkpWNHlBZExiYUw5QTRqWHNEY0NFYmRmSXdQUHFQcnQzYVk2dnJGay9DamhGTGZzOEw2UCsxZHk3MHNudEsKNEV3U0pReHdqUU1wb09GVEpPd1QyZTRadnhDelNvdy9pYU5oVWQ2c2h3ZVU5R054N0M3aWIxdVlnZUdKWERSNQpiSGJ2TzVCaWVlYmJwSm92SnNYUUVPRU8zdGtRamhiN3QvZW85OGZsQWdlWWp6WUlsZWZpTjVZTk5uV2UrdzV5CnNSMmJ2QVA1U1FYWWdkMEZ0Q3JXUWVtc0FYYVZDZy9ZMzlXOUVoODFMeWdYYk5LWXdhZ0paSGR1UnplNnpxeFoKWG1pZGYzTFdpY1VHUVNrK1dUN2RKdlVreVJHbldxTk1RQjlHb1ptMXB6cFJib1k3bm4xeXB4SUZlRm50UGxGNApGUXNEajQzUUx3V3lQbnRLSEV0ekJSTDh4dXJnVUJOOFE1TjBzOHAwNTQ0ZkFRalFNTlJiY1RhMEI3ckJNREJjClNMZUNPNWltZldDS29xTXBnc3k2dllNRUc2S0RBMEdoMWdYeEc4SzI4S2g4aGp0R3FFZ3FpTngybW5hL0gycWwKUFJtUDZ6anpaTjdJS3cwS0tQLzMyK0lWUXRRaTBDZGQ0WG4rR09kd2lLMU81dG1MT3NiZEoxRnUvN3hrOVRORApUd0lEQVFBQm80SUJSakNDQVVJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT0JnTlZIUThCQWY4RUJBTUNBUVl3ClN3WUlLd1lCQlFVSEFRRUVQekE5TURzR0NDc0dBUVVGQnpBQ2hpOW9kSFJ3T2k4dllYQndjeTVwWkdWdWRISjEKYzNRdVkyOXRMM0p2YjNSekwyUnpkSEp2YjNSallYZ3pMbkEzWXpBZkJnTlZIU01FR0RBV2dCVEVwN0drZXl4eAordHZoUzVCMS84UVZZSVdKRURCVUJnTlZIU0FFVFRCTE1BZ0dCbWVCREFFQ0FUQS9CZ3NyQmdFRUFZTGZFd0VCCkFUQXdNQzRHQ0NzR0FRVUZCd0lCRmlKb2RIUndPaTh2WTNCekxuSnZiM1F0ZURFdWJHVjBjMlZ1WTNKNWNIUXUKYjNKbk1Ed0dBMVVkSHdRMU1ETXdNYUF2b0MyR0syaDBkSEE2THk5amNtd3VhV1JsYm5SeWRYTjBMbU52YlM5RQpVMVJTVDA5VVEwRllNME5TVEM1amNtd3dIUVlEVlIwT0JCWUVGSG0wV2VaN3R1WGtBWE9BQ0lqSUdsajI2WnR1Ck1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQUtjd0JzbG03L0RsTFFydDJNNTFvR3JTK280NCsveVFvREZWREMKNVd4Q3UyK2I5TFJQd2tTSUNIWE02d2ViRkdKdWVON3NKN281WFBXaW9XNVdsSEFRVTdHNzVLL1Fvc01yQWRTVwo5TVVnTlRQNTJHRTI0SEdOdExpMXFvSkZsY0R5cVNNbzU5YWh5MmNJMnFCRExLb2JreC9KM3ZXcmFWMFQ5VnVHCldDTEtUVlhrY0dkdHdsZkZSamxCejRwWWcxaHRtZjVYNkRZTzhBNGpxdjJJbDlEalhBNlVTYlcxRnpYU0xyOU8KaGU4WTRJV1M2d1k3YkNrakNXRGNSUUpNRWhnNzZmc08zdHhFK0ZpWXJ1cTlSVVdoaUYxbXl2NFE2VytDeUJGQwpEZnZwN09PR0FONmRFT000K3FSOXNkam9TWUtFQnBzcjZHdFBBUXc0ZHk3NTNlYzUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQzN3SHpPdXNNVnpjbDIKb2x2cVgxRFBrbDNRUXpHdGkrTDdoVFNKYlRXSk5tTFRHQVVOOG0wbyt0MHRhSEF0QjFiRThFSHBoemJ1eklVSwpUa0ZiVWVpenNoQ1FVREtUQStyUkc0T0ZHTEFGVUlMUUxIZm1SZ0VyU3krOGdZcXVITmpFaTFSZE1ud2NCZmExClpGVjZyTzdvZmNidDY0UElzcFhhTkVWS2c3eTYzSTJSNU9mYjNPemxpOGx4T3l2bXFvVUtxY2FNNlJ0VWNsTmQKUzQ4UHNPOW02SkNoUEJrU29wVms1SHlxS3FMS3JQcmVyelV5VDJiSUE1cWhYOHhrK2tyZzdGQ0FTbm9LTllGLwpNYXBxYWErdGNCTGxmTS85b05pN1ZOUkplNStiUFlub1Avd1l5VlZzTkJ1UHlRd0RrRzRlN3BueXd1cmR2Q0huCmkyMm5URzRwQWdNQkFBRUNnZ0VCQUpCMDhTbU14Y1drYkplcGVGMCs1Y2JwcUhzTCtFZ1pTeTYxUCtJeVN2NCsKRlY4aTZRWlg2ZDFucXU0Qnh2NS9ZSVdlNUJKMVRJaGJuTlBIUmJaSEpJdndsdmo5TTJWRWxSd2paemdCZXBBVApCV1FuTVhPRTRYSnB2M09RMjdlWjBnaGlDTWJqNDVJY1ZpR3dhVXJ5SFRnRmVaaWRxSkxsWXMyU2ZrN2dWa1VICnZOdjdNbFpQa0g4QmNjR3pjVmFoK3pYRFFacXlISXZUWGo2bFBGRDJ6Qmw2OWdmYmZIZVhrRHhrbXdVdlZNeEUKTkc4QXhwN0FLMDhWVVZjVnc5S3hIdlRMN3RHV2ZiNmZFVFZ5SThXNmY4dGVqQzdUcjlrSmYxdlRMTGVVV3BnKwpRck80Mzlra0t1b3U1cTJMT0RrMWNqUDhlNmVXUGw5V0RWRHZHUkJXNXdrQ2dZRUE2eFY0U0c2Z2tPQ295bC9LCm1aeEkvZVlaK0ZVaFhjMGkvQ051YzVvZUV6eC9HNUFRVDhwYWhiNDdONUxNM0F3dnFGcms1dW5ReUIvcEMwbkMKNjlKZ2p5VndXT0VqVmNkcHpRZFJidGV5ZjkyN0pvcGJqcmlkc1RvYklOWHlJRG9CT3cxMUtyU2pZZWNnc21scwpSWHRzVllkZ1g5bUJpZHF5Z3hJdUJqaVgvdnNDZ1lFQXlCblMranBsWUtDVDdnZVEybTB2ZThGMmNEQ0I1TFppCllYRVVQRm4yTmJzaTd1cXFaZnRCZVRLTUdLYmNzcjN0bFRNS3d5YUxUMFVJbnVIcTMwZE1vOUs1UVBaOHNtbFAKTi8wU1RUNGR3NWUxQzNRYWZuMnQ0TzZZU3hxU1BlRDN6ZHNrWlk4dGRDdEM5NlE0ckhrNStLOTkyZ3JiUUY2SApzYjFZQnlHQ3Jpc0NnWUVBNGdUNGFwdUNZUWkvQUNQdFJKZFFUbHlISjQyaDBPL0Q3U3VickNYSE9MTjNlZWFlCjZEZ2pwR2JyeEZpdUFmcnRieTVFMmdaL3A0bVdwRFc4NU1LVjk4c0ZJMDhDakJ4NENwbzRueHRmRVRUOEZPZjkKYzFEb3ZGYWpjb1NBa0o5MFEzU0M3QlpVNTNJeXE1WlVkTkZmclRQRll5SmFPMUk3UTIyZE5ubi9HVFVDZ1lCcwpkM3Npd3ViVE14Z2REaUxhRkJlS0tQdVBvdXUyVTVzT29PSk1PS082eW44TUxVNUN5NmpaRHFwY2JvN3hvUHlaClJMclB3Q1FCeXpUNkV4SmpCOTRtYTRLYUVVTFUzenJlNmFLekZqbkNIWWs0OVMyclpXc01vNmtRQlE1QzFxRGQKQ0s0NUV4eWJmUnZtNnpFQlpSRWttZFJKamxyOUVJRFR1d1J0a1IrcVV3S0JnRnR1QTVFZXhzdldUTVFDWWw3KwpaOEgvdTBGa2pEclJDWG95aFUrZithU2kxMTJOcWZadzNVOUJtVHoyQU9ldHZJVis1ZWc1VWJUSzYyMTBMa3gzCm9TM0JMMHpUWEo1S29yUUtiK2QrMnBOWnc0eHRicHErcE9oWVFqcHBCcWFSRW5oMFVBWTVSZlhRUFRqWk93SzgKbjdvb2hxamJNalBTeGkyOHE5Y1NFOUtMCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  kind: Secret
  metadata:
    creationTimestamp: null
    name: ingress-default-cert
    namespace: ingress-nginx
  type: kubernetes.io/tls
addons_include: []
system_images:
  etcd: rancher/mirrored-coreos-etcd:v3.5.4
  alpine: rancher/rke-tools:v0.1.87
  nginx_proxy: rancher/rke-tools:v0.1.87
  cert_downloader: rancher/rke-tools:v0.1.87
  kubernetes_services_sidecar: rancher/rke-tools:v0.1.87
  kubedns: rancher/mirrored-k8s-dns-kube-dns:1.21.1
  dnsmasq: rancher/mirrored-k8s-dns-dnsmasq-nanny:1.21.1
  kubedns_sidecar: rancher/mirrored-k8s-dns-sidecar:1.21.1
  kubedns_autoscaler: rancher/mirrored-cluster-proportional-autoscaler:1.8.5
  coredns: rancher/mirrored-coredns-coredns:1.9.3
  coredns_autoscaler: rancher/mirrored-cluster-proportional-autoscaler:1.8.5
  nodelocal: rancher/mirrored-k8s-dns-node-cache:1.21.1
  kubernetes: rancher/hyperkube:v1.24.4-rancher1
  flannel: rancher/mirrored-coreos-flannel:v0.15.1
  flannel_cni: rancher/flannel-cni:v0.3.0-rancher6
  calico_node: rancher/mirrored-calico-node:v3.22.0
  calico_cni: rancher/calico-cni:v3.22.0-rancher1
  calico_controllers: rancher/mirrored-calico-kube-controllers:v3.22.0
  calico_ctl: rancher/mirrored-calico-ctl:v3.22.0
  calico_flexvol: rancher/mirrored-calico-pod2daemon-flexvol:v3.22.0
  canal_node: rancher/mirrored-calico-node:v3.22.0
  canal_cni: rancher/calico-cni:v3.22.0-rancher1
  canal_controllers: rancher/mirrored-calico-kube-controllers:v3.22.0
  canal_flannel: rancher/mirrored-flannelcni-flannel:v0.17.0
  canal_flexvol: rancher/mirrored-calico-pod2daemon-flexvol:v3.22.0
  weave_node: weaveworks/weave-kube:2.8.1
  weave_cni: weaveworks/weave-npc:2.8.1
  pod_infra_container: rancher/mirrored-pause:3.6
  ingress: rancher/nginx-ingress-controller:nginx-1.2.1-rancher1
  ingress_backend: rancher/mirrored-nginx-ingress-controller-defaultbackend:1.5-rancher1
  ingress_webhook: rancher/mirrored-ingress-nginx-kube-webhook-certgen:v1.1.1
  metrics_server: rancher/mirrored-metrics-server:v0.6.1
  windows_pod_infra_container: rancher/mirrored-pause:3.6
  aci_cni_deploy_container: noiro/cnideploy:5.2.3.2.1d150da
  aci_host_container: noiro/aci-containers-host:5.2.3.2.1d150da
  aci_opflex_container: noiro/opflex:5.2.3.2.1d150da
  aci_mcast_container: noiro/opflex:5.2.3.2.1d150da
  aci_ovs_container: noiro/openvswitch:5.2.3.2.1d150da
  aci_controller_container: noiro/aci-containers-controller:5.2.3.2.1d150da
  aci_gbp_server_container: noiro/gbp-server:5.2.3.2.1d150da
  aci_opflex_server_container: noiro/opflex-server:5.2.3.2.1d150da
ssh_key_path: ~/.ssh/id_rsa
ssh_cert_path: ""
ssh_agent_auth: false
authorization:
  mode: rbac
  options: {}
ignore_docker_version: null
enable_cri_dockerd: null
kubernetes_version: ""
private_registries: []
ingress:
  provider: ""
  options: {}
  node_selector: {}
  extra_args: {}
  dns_policy: ""
  extra_envs: []
  extra_volumes: []
  extra_volume_mounts: []
  update_strategy: null
  http_port: 0
  https_port: 0
  network_mode: ""
  tolerations: []
  default_backend: null
  default_http_backend_priority_class_name: ""
  nginx_ingress_controller_priority_class_name: ""
  default_ingress_class: null
cluster_name: ""
cloud_provider:
  name: ""
prefix_path: ""
win_prefix_path: ""
addon_job_timeout: 0
bastion_host:
  address: ""
  port: ""
  user: ""
  ssh_key: ""
  ssh_key_path: ""
  ssh_cert: ""
  ssh_cert_path: ""
  ignore_proxy_env_vars: false
monitoring:
  provider: ""
  options: {}
  node_selector: {}
  update_strategy: null
  replicas: null
  tolerations: []
  metrics_server_priority_class_name: ""
restore:
  restore: false
  snapshot_name: ""
rotate_encryption_key: false
dns: null
