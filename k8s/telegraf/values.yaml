## Default values.yaml for Telegraf
## This is a YAML-formatted file.
## ref: https://hub.docker.com/r/library/telegraf/tags/

replicaCount: 1

image:
  repo: "telegraf"
  tag: "1.23-alpine"
  pullPolicy: IfNotPresent

podAnnotations: {}

podLabels:
  log-label: "true"

imagePullSecrets: []

## Configure args passed to Telegraf containers
args: []


# The name of a secret in the same kubernetes namespace which contains values to
# be added to the environment (must be manually created)
# This can be useful for auth tokens, etc.

# envFromSecret: "telegraf-tokens"


env:
  - name: HOSTNAME
    value: "telegraf-polling-service"

# An older "volumeMounts" key was previously added which will likely
# NOT WORK as you expect. Please use this newer configuration.

# volumes:
# - name: telegraf-output-influxdb2
#   configMap:
#     name: "telegraf-output-influxdb2"
# mountPoints:
# - name: telegraf-output-influxdb2
#   mountPath: /etc/telegraf/conf.d
#   subPath: influxdb2.conf


## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources: {}
  # requests:
  #   memory: 128Mi
  #   cpu: 100m
  # limits:
  #   memory: 128Mi
  #   cpu: 100m

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
# - key: "key"
#   operator: "Equal|Exists"
#   value: "value"
#   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

service:
  enabled: true
  type: ClusterIP
  annotations: {}

rbac:
  # Specifies whether RBAC resources should be created
  create: true
  # Create only for the release namespace or cluster wide (Role vs ClusterRole)
  clusterWide: false
  # Rules for the created rule
  rules: []
# When using the prometheus input to scrape all pods you need extra rules set to the ClusterRole to be
# able to scan the pods for scraping labels. The following rules have been taken from:
# https://github.com/helm/charts/blob/master/stable/prometheus/templates/server-clusterrole.yaml#L8-L46
#    - apiGroups:
#        - ""
#      resources:
#        - nodes
#        - nodes/proxy
#        - nodes/metrics
#        - services
#        - endpoints
#        - pods
#        - ingresses
#        - configmaps
#      verbs:
#        - get
#        - list
#        - watch
#    - apiGroups:
#        - "extensions"
#      resources:
#        - ingresses/status
#        - ingresses
#      verbs:
#        - get
#        - list
#        - watch
#    - nonResourceURLs:
#        - "/metrics"
#      verbs:
#        - get

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
  # Annotations for the ServiceAccount
  annotations: {}

## Exposed telegraf configuration
## For full list of possible values see `/docs/all-config-values.yaml` and `/docs/all-config-values.toml`
## ref: https://docs.influxdata.com/telegraf/v1.1/administration/configuration/
config:
  agent:
    interval: "30s"
    round_interval: true
    metric_batch_size: 1000
    metric_buffer_limit: 10000
    collection_jitter: "0s"
    flush_interval: "10s"
    flush_jitter: "0s"
    precision: ""
    debug: true
    quiet: false
    logfile: ""
    hostname: "$HOSTNAME"
    omit_hostname: false
  processors:
    - enum:
        mapping:
          field: "status"
          dest: "status_code"
          value_mappings:
            healthy: 1
            problem: 2
            critical: 3
  outputs:
    - influxdb_v2:
        urls:
          - "http://victoria-metrics-cluster-vminsert.victoriametrics.svc.cluster.local:8480/insert/0/influx"
        content_encoding: "identity"
            #database: "metrics"
# Useful outputs for debuging reason
#    - file:
#        files:
#          - "/tmp/metrics.out"
#        data_format: "json"
#        json_timestamp_units: "1s"
#    - influxdb:
#        urls:
#          - "udp://localhost:8089"

  inputs:
    - kafka_consumer:
        brokers:
          - "kafka.kafka.svc.cluster.local:9092"
        topics: 
          - "metrics"
        data_format: "json_v2"          
        json_v2:
          measurement_name_path: "name"
          timestamp_path: "timestamp"
          timestamp_format: "unix_ms"
          timestamp_timezone: "UTC"
# OK 1
          object:
            path: "@this"
            disable_prepend_keys: true
            excluded_keys:
              - "fields_x"
            tags:
              - "tags_address" 
              - "tags_host"
              - "tags_url"
              - "tags_version"
              - "tags_topic"
              - "tags_consumergroup"
              - "tags_quantile"
              - "tags_le"
#              - "tags_partition"

# OK 2          
#          field:
#            path: "fields.cpu-usage"
#          object:
#            path: "tags"
#            disable_prepend_keys: true
#            tags:
#              - "address" 
#              - "server"
#              - "resource"
#              - "event"
# OK 3
#          object:
#            path: "@this"
#            disable_prepend_keys: true
#            included_keys:
#              - "fields_cpu-usage"
#            tags:
#              - "tags_address" 
#              - "tags_server"
#              - "tags_resource"
#              - "tags_event"

# json output format
#    - kafka_consumer:
#        brokers:
#          - "kafka.kafka.svc.cluster.local:9092"
#        topics: 
#          - "metrics"
#        ##version: “2.0.0”
#        ##sasl_username: “(username)”
#        ##sasl_password: “(password)”
#        ##consumer_group: "test"
#        ##offset: "oldest"
#        ##max_message_len: 1000000
#        #data_format: "influx"
#        data_format: "json"
#        json_name_key: "measurement"
#        tag_keys:
#          - "resource"
#        #insecure_skip_verify: true

#     - prometheus:
#        monitor_kubernetes_pods: false
#        response_timeout: "5s"
#        metric_version: 2
#        kubernetes_services: 
#          - "http://kafka-metrics.kafka.svc.cluster.local:9308/metrics"
#        insecure_skip_verify: true         

metrics:
  health:
    enabled: true
    service_address: "http://:8888"
    threshold: 5000.0
  internal:
    enabled: false
    collect_memstats: false

# Lifecycle hooks
# hooks:
#   postStart: ["/bin/sh", "-c", "echo Telegraf started"]
#   preStop: ["/bin/sh", "-c", "sleep 60"]

## Pod disruption budget configuration
##
pdb:
  ## Specifies whether a Pod disruption budget should be created
  ##
  create: true
  minAvailable: 1
  # maxUnavailable: 1
